df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
recode("openess_values", "TRUE" = "Yes") %>%
recode("openess_values", "FALSE" = "No")
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
recode(openess_values, "TRUE" = "Yes") %>%
recode(openess_values, "FALSE" = "No")
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
select(openess, openess_values)
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
select(openess, openess_values) %>%
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
))
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
select(openess, openess_values)
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
# select(openess, openess_values) %>%
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
)) %>%
pivot_wider(id_cols = openess,
values_from = openess_values)
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
# select(openess, openess_values) %>%
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
))
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
# select(openess, openess_values) %>%
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
))
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
# select(openess, openess_values) %>%
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
)) %>%
pivot_wider(names_from =  = openess,
df %>%
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
# select(openess, openess_values) %>%
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
)) %>%
pivot_wider(names_from = openess,
values_from = openess_values)
df <- df %>%
# reshape for easy handling
pivot_longer(cols = is_open_data:true_open_data,
names_to = "openess",
values_to = "openess_values") %>%
# select(openess, openess_values) %>%  # just for test
# change the values
mutate(openess_values = case_when(
openess_values == "TRUE" ~ "Yes",
TRUE ~ "No"
)) %>%
# reshape to the original form
pivot_wider(names_from = openess,
values_from = openess_values)
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
FAIR_level:FsF_R1.3_01M
)) %>%
gtsummary::tbl_summary()
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
FAIR_level:FsF_R1.3_01M
)) %>%
gtsummary::tbl_summary(by = isOpenAccess)
glimpse(df)
df %>%
mutate(isOpenAccess = case_when(
isOpenAccess == "Y" ~ "Yes",
TRUE ~ "No"
))
df <- df %>%
mutate(isOpenAccess = case_when(
isOpenAccess == "Y" ~ "Yes",
TRUE ~ "No"
))
glimpse(df)
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
FAIR_level:FsF_R1.3_01M
)) %>%
gtsummary::tbl_summary(by = isOpenAccess)
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
Open data cat,
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess)
df %>%
count(journalTitle)
df %>%
count(arrange(journalTitle))
df %>%
count(desc(journalTitle))
table(df$journalTitle)
df %>%
select(journalTitle) %>%
fct_lump_n(3) %>%
table()
fct_lump_lowfreq(df$journalTitle) %>% table()
df %>%
top_n(journalTitle)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=10, other_level="Other"))
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=10, other_level="Other")) %>%
count(desc(journalTitle))
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=10, other_level="Other")) %>%
group_by(journalTitle) %>%
count()
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=10, other_level="Other")) %>%
group_by(journalTitle) %>%
count(desc())
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=10, other_level="Other")) %>%
group_by(journalTitle) %>%
count()
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=6, other_level="Other")) %>%
group_by(journalTitle) %>%
count()
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=9, other_level="Other")) %>%
group_by(journalTitle) %>%
count()
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=9, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count()
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=9, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=9, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=10, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=15, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=15, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count() %>%
arrange(desc(n))
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=15, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
tally(sort = T) %>%
ungroup() %>%
arrange(desc(n))
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=15, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
tally(sort = T) %>%
ungroup() %>%
arrange(desc(n)) %>%
# count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=25, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
tally(sort = T) %>%
ungroup() %>%
arrange(desc(n)) %>%
# count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=25, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n=35, other_level="Other")) %>%
group_by(journalTitle, true_open_data) %>%
count() %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n = 35, other_level = "Other")) %>%
group_by(journalTitle, true_open_data) %>%
count(sort = T) %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n = 35, other_level = "Other")) %>%
group_by(journalTitle, true_open_data) %>%
count(sort = T, .by_group = TRUE) %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n = 35, other_level = "Other")) %>%
group_by(journalTitle, true_open_data) %>%
count(sort = T) %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
mutate(journalTitle = fct_lump(journalTitle, n = 29, other_level = "Other")) %>%
group_by(journalTitle, true_open_data) %>%
count(sort = T) %>%
pivot_wider(names_from = true_open_data,
values_from = n)
df %>%
filter(true_open_data == "Yes") %>%
mutate(journalTitle = fct_lump(journalTitle, n = 29, other_level = "Other")) %>%
group_by(journalTitle) %>%
count(sort = T)
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**")
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**")
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**") %>%
as_flex_table() %>%
flextable::save_as_docx("table1.docx")
here::here()
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**") %>%
as_flex_table() %>%
flextable::save_as_docx(here("table1.docx"))
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**") %>%
as_flex_table() %>%
flextable::save_as_docx( path = "table1.docx")
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::add_overall() %>%
gtsummary::add_n() %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**")
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess) %>%
gtsummary::add_overall() %>%
# gtsummary::add_n() %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**")
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
open_data_category,
FAIR_level:FsF_R1.3_02D
)) %>%
gtsummary::tbl_summary(by = isOpenAccess,
sort = all_categorical() ~ "frequency") %>%
gtsummary::add_overall() %>%
# gtsummary::add_n() %>%
gtsummary::modify_header(label ~ "**Variable**") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "**Open Access**")
open_data_all %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
FAIR_level:FsF_R1.3_01M
)) %>%
DataExplorer::plot_intro()
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
FAIR_level:FsF_R1.3_01M
)) %>%
DataExplorer::plot_intro()
visdat::vis_dat(df)
df %>%
select(-c(id,
doi_publication,
title,
pubType,
study_type,
dataset_type,
FAIR_level:FsF_R1.3_01M
)) %>%
DataExplorer::plot_intro()
open_data_all %>%
filter(!is.na(FAIRness)) %>%
plot_missing()
df %>%
filter(!is.na(FAIRness)) %>%
plot_missing()
df %>%
filter(!is.na(FAIRness)) %>%
plot_missing()
open_data_all %>%
select(journalTitle:FAIR_level) %>%
DataExplorer::plot_bar()
df %>%
select(journalTitle:FAIR_level) %>%
DataExplorer::plot_bar()
n_distinct(open_data_all$title)
n_distinct(df$title)
df %>%
janitor::tabyl(isOpenAccess) %>%
janitor::adorn_pct_formatting()
open_data_all %>%
janitor::tabyl(is_open_data) %>%
janitor::adorn_pct_formatting()
df %>%
janitor::tabyl(is_open_data) %>%
janitor::adorn_pct_formatting()
rstransparent_accuracy <- table(df$is_open_data,
df$true_open_data)
table(df$is_open_data)
rstransparent_accuracy
vcd::Kappa(rstransparent_accuracy)
confusionMatrix(df$is_open_data,  # the predicted by the rtransparent package
df$true_open_data # the actual value
)
sum(diag(rstransparent_accuracy))/sum(rstransparent_accuracy) #overall accuracy
1-sum(diag(rstransparent_accuracy))/sum(rstransparent_accuracy) #incorrect classification
sum(diag(rstransparent_accuracy)) #N cases correctly classified
sum(d)-sum(diag(rstransparent_accuracy)) #N cases incorrectly classified
sum(rstransparent_accuracy)-sum(diag(rstransparent_accuracy)) #N cases incorrectly classified
sum(diag(rstransparent_accuracy)) #N cases correctly classified
sum(rstransparent_accuracy) - sum(diag(rstransparent_accuracy)) #N cases incorrectly classified
df %>%
tabyl(true_open_data, is_open_data)
mosaic(rstransparent_accuracy)
table(df$true_open_data)
table(df$true_open_data)
rstransparent_accuracy
mosaic(table(df$true_open_data, df$is_open_data), shade = T)
mosaic(table(df$true_open_data, df$is_open_data), shade = T)
table(df$true_open_data, df$is_open_data)
mosaicplot(table(df$true_open_data, df$is_open_data))
mosaicplot(table(df$true_open_data, df$is_open_data), shade = T)
chisq.test(table(df$true_open_data, df$is_open_data))
n_distinct(df$journalTitle)
df %>%
ggplot(aes(x = as.factor(pubYear))) +
geom_histogram()
df %>%
ggplot(aes(x = pubYear)) +
geom_histogram()
df %>%
ggplot(aes(x = pubYear)) +
geom_histogram(bins = 5)
df %>%
ggplot(aes(x = pubYear)) +
geom_histogram(bins = 6)
df %>%
ggplot(aes(x = pubYear)) +
geom_histogram(bins = 7)
table(df$pubYear)
gitcreds_set()
gitcreds::gitcreds_set()
